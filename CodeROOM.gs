// ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡∏ä‡∏µ‡∏ï‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô ‡∏à‡∏≤‡∏Å‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ï‡∏≠‡∏Å ROOM
function getCurrentData_ROOM(url) {
  try {
    let ssROOM = SpreadsheetApp.openByUrl(url);
    let sheetROOM = ssROOM.getSheetByName(globalVariables().shWeightROOM);
    let sheetSetupROOM = ssROOM.getSheetByName(globalVariables().shSetWeight);
    let sheetRemarksROOM = ssROOM.getSheetByName(globalVariables().shRemarks);

    let result = {
      url: url,
      remarks: sheetRemarksROOM.getDataRange().getDisplayValues().slice(2).reverse(),
      setup: sheetSetupROOM.getRange(globalVariables().setupRangeROOM).getDisplayValues(),
      data: sheetROOM.getDataRange().getDisplayValues().slice(4).reverse(),
      colors: sheetROOM.getDataRange().getBackgrounds().slice(4).reverse()
    }

    return result;

  } catch (error) {
    result = { result: false, url: url };
    return result
  }
}

// ‡∏•‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤
function setting_addChecker_room(url, username, detail) {
  let ss = SpreadsheetApp.openByUrl(url);
  let sheet = ss.getSheetByName(globalVariables().shSetWeight);

  sheet.getRange(globalVariables().checkSetupRangeROOM).setValue(username);
  
  // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥‡∏á‡∏≤‡∏ô
  let auditTrial_msg = `‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ä‡∏±‡πà‡∏á ${detail.type}\
                      \n${detail.product}\
                      \n${detail.lot}\
                      \n${detail.tabletID}`;

  audit_trail("‡∏•‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤", auditTrial_msg, username);

  const timeStamp = new Date().toLocaleString('en-GB', { timeZone: 'Asia/Jakarta' });
  const approval_msg = `üåà‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ä‡∏±‡πà‡∏á ${detail.type}
    \nüî∞${detail.tabletID}\
    \nüî∞${detail.lot}\
    \nüî∞${detail.product}
    \n‚™º ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÇ‡∏î‡∏¢\
    \n‚™º ‡∏Ñ‡∏∏‡∏ì ${username}\
    \n‚™º ${timeStamp}`;

  sendLineNotify(approval_msg, globalVariables().approval_token);
}

// ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡∏±‡∏©‡∏ì‡∏∞‡∏Ç‡∏≠‡∏á‡πÄ‡∏°‡πá‡∏î‡∏¢‡∏≤
function recodeCharacteristics(url, date_time, value) {
  let ss = SpreadsheetApp.openByUrl(url);
  let sheet = ss.getSheetByName(globalVariables().shWeightROOM);
  let data = sheet.getDataRange().getDisplayValues();

  for (let i = 4; i < data.length; i++) {
    if (data[i][0] == date_time) {
      sheet.getRange(i + 1, 7).setValue(value);
      return;
    };
  };
}

// ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏ô‡∏≤‡∏Ç‡∏≠‡∏á‡πÄ‡∏°‡πá‡∏î‡∏¢‡∏≤
function recordThickness(form) {
  let ss = SpreadsheetApp.openByUrl(form.thickness_url);
  let sheet = ss.getSheetByName(globalVariables().shWeightROOM);
  let data = sheet.getDataRange().getDisplayValues();

  let dataList = [
    form.thickness1,
    form.thickness2,
    form.thickness3,
    form.thickness4,
    form.thickness5,
    form.thickness6,
    form.thickness7,
    form.thickness8,
    form.thickness9,
    form.thickness10
  ];

  for (let i = 4; i < data.length; i++) {
    if (data[i][0] == form.thickness_timestamp) {
      sheet.getRange(i + 1, 10, 1, 10).setValues([dataList]);
      return { date_time: form.thickness_timestamp, dataList };
    };
  };
}

// ‡∏•‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö
function addChecker(url, username) {
  let ss = SpreadsheetApp.openByUrl(url);
  let sheet = ss.getSheetByName(globalVariables().shWeightROOM);

  sheet.getRange(sheet.getLastRow(), 9).setValue(username);
}

// ‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î‡∏Å‡∏≤‡∏£‡∏ú‡∏•‡∏¥‡∏ï
function endJob_ROOM(url, username) {
  let ss = SpreadsheetApp.openByUrl(url);
  let today = new Date().toLocaleString('en-GB', { timeZone: 'Asia/Jakarta' });
  let date = today.split(",")[0];

  let shSetWeight = ss.getSheetByName(globalVariables().shSetWeight);
  let tabletID = shSetWeight.getRange('A2').getDisplayValue();
  let productName = shSetWeight.getRange('A4').getDisplayValue();
  let lot = shSetWeight.getRange('A5').getDisplayValue();

  // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà‡∏Å‡∏î ENDJOB
  shSetWeight.getRange(globalVariables().checkEndjobRangeROOM).setValue("‡∏à‡∏ö‡∏Å‡∏≤‡∏£‡∏ú‡∏•‡∏¥‡∏ï‡πÇ‡∏î‡∏¢ " + username + " ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà " + today);
  
  // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥‡∏á‡∏≤‡∏ô
  let detail = `‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ä‡∏±‡πà‡∏á: 10 ‡πÄ‡∏°‡πá‡∏î\
                \n‡∏ä‡∏∑‡πà‡∏≠‡∏¢‡∏≤: ${productName}\
                \n‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡∏ú‡∏•‡∏¥‡∏ï: ${lot}\
                \n‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ï‡∏≠‡∏Å: ${tabletID}`;

  audit_trail("‡∏à‡∏ö‡∏Å‡∏≤‡∏£‡∏ú‡∏•‡∏¥‡∏ï", detail, username);

  // ‡∏à‡∏±‡∏î‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡πÇ‡∏ü‡∏•‡πå‡πÄ‡∏î‡∏≠‡∏£‡πå
  let folder = DriveApp.getFolderById(globalVariables().folderIdROOM);
  let newSh = ss.copy(`${lot}_${productName}_${tabletID}_${date}`);
  let shID = newSh.getId(); // get newSheetID
  let file = DriveApp.getFileById(shID);

  folder.addFile(file); // ‡∏¢‡πâ‡∏≤‡∏¢‡πÑ‡∏ü‡∏•‡πå‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡πÅ‡∏ü‡πâ‡∏°‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
  
  // ‡∏•‡∏ö‡∏ä‡∏µ‡∏ï‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡∏ä‡∏µ‡∏ï‡∏´‡∏•‡∏±‡∏Å‡∏≠‡∏≠‡∏Å
  let shName = ss.getSheets();
  for (i = 0; i < shName.length; i++) {
    let sh = shName[i].getName();
    if (sh == "WEIGHT" || sh == "‡∏Å‡∏£‡∏≤‡∏ü" || sh == "Remark" || sh == "Setting") {
      continue;
    } else {
      ss.deleteSheet(shName[i]);
    }
  };
  
  ss.getSheetByName(globalVariables().shWeightROOM).getRange("A5:S").clearContent();
  ss.getSheetByName(globalVariables().shRemarks).getRange("A3:F").clearContent();
  ss.getSheetByName(globalVariables().shSetWeight).getRange("A3:A16").setValue("xxxxx");

  return getCurrentData_ROOM(url);
};



